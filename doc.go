// Package docss is an example of way how Go code documentation can be simply
// autogenerated from comments on exported types and functions.
//
// Package docss seems to be a list of logically duplicated code. Btw, I implemented
// some basics to show that I know how to generate documentation from code.
//
// Generated documentation looks like normal English. Moreover, some docstrings also
// contain examples how to use methods.
//
// Do not forget about package `logger` that is missed in documentation because it is
// placed inside an `internal` folder. Internal folder means that any external developer
// SHOULD NOT copy any code from inside as it can be changed at any time and does not
// required to be documented and listed in changes of any new version.
//
// Code that external developer CAN use is placed inside `pkg` folder, directly in
// root or any other folder that can also be a submodule.
//
// For example, library developers often follow flatten pattern - they place all files
// directly in project root folder under one package. Product developers often follow
// tree project layout as such way logically separates different parts of a program.
package docss
